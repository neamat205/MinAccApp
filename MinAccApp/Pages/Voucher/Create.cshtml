@page
@model MinAccApp.Pages.Voucher.CreateModel

@{
 
    ViewData["Title"] = "Create Voucher";
}

<div class="container my-5 p-4 shadow rounded bg-white">
    <h2 class="mb-4 text-primary">Create Voucher</h2>

    <form method="post" class="needs-validation" novalidate>
        <div class="row mb-3">
            <div class="mb-3">
                <label for="voucherType" class="form-label">Voucher Type</label>
                <select asp-for="Voucher.VoucherType" class="form-select" id="voucherType" required>
                    <option value="Journal">Journal</option>
                    <option value="Payment">Payment</option>
                    <option value="Receipt">Receipt</option>
                </select>
            </div>

            <div class="col-md-4">
                <label asp-for="Voucher.Date" class="form-label fw-semibold">Date</label>
                <input asp-for="Voucher.Date" type="date" class="form-control" required />
                <div class="invalid-feedback">
                    Please select a date.
                </div>
            </div>
            <div class="col-md-4">
                <label asp-for="Voucher.ReferenceNo" class="form-label fw-semibold">Reference No</label>
                <input asp-for="Voucher.ReferenceNo" class="form-control" />
            </div>
        </div>

        <h4 class="mt-4 mb-3 text-secondary">Entries</h4>

        <div class="table-responsive shadow-sm rounded">
            <table class="table table-bordered align-middle mb-3">
                <thead class="table-primary">
                    <tr>
                        <th>Account</th>
                        <th>Entry Type</th>
                        <th>Amount</th>
                        <th style="width: 50px;">Remove</th>
                    </tr>
                </thead>
                <tbody id="entriesBody">
                    @if (Model.Voucher.Entries != null)
                    {
                        for (int i = 0; i < Model.Voucher.Entries.Count; i++)
                        {
                            <tr>
                                <td>
                                    <select asp-for="Voucher.Entries[@i].AccountId" asp-items="@(new SelectList(Model.ChartOfAccounts, "Id", "Name"))" class="form-select" required>
                                        <option value="">-- Select Account --</option>
                                    </select>
                                    <div class="invalid-feedback">Select an account.</div>
                                </td>
                                <td>
                                    <select asp-for="Voucher.Entries[@i].EntryType" class="form-select" required>
                                        <option value="">-- Select Type --</option>
                                        <option value="Debit">Debit</option>
                                        <option value="Credit">Credit</option>
                                    </select>
                                    <div class="invalid-feedback">Select entry type.</div>
                                </td>
                                <td>
                                    <input asp-for="Voucher.Entries[@i].Amount" type="number" step="0.01" class="form-control" min="0.01" required />
                                    <div class="invalid-feedback">Enter amount greater than 0.</div>
                                </td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeEntry(this)" aria-label="Remove entry">&times;</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        <button type="button" class="btn btn-success mb-3" onclick="addEntry()">
            <i class="bi bi-plus-circle me-1"></i> Add Entry
        </button>

        <br />

        <button type="submit" class="btn btn-primary px-5">Save Voucher</button>
        <a asp-page="List" class="btn btn-secondary ms-3 px-4">Cancel</a>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        function removeEntry(button) {
            const row = button.closest('tr');
            row.remove();
            updateEntryIndices();
        }

        function addEntry() {
            const tbody = document.getElementById('entriesBody');
            const rowCount = tbody.rows.length;

            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>
                    <select name="Voucher.Entries[${rowCount}].AccountId" class="form-select" required>
                        <option value="">-- Select Account --</option>
                        @foreach (var account in Model.ChartOfAccounts)
                        {
                                <option value="@account.Id">@account.Name</option>
                        }
                    </select>
                    <div class="invalid-feedback">Select an account.</div>
                </td>
                <td>
                    <select name="Voucher.Entries[${rowCount}].EntryType" class="form-select" required>
                        <option value="">-- Select Type --</option>
                        <option value="Debit">Debit</option>
                        <option value="Credit">Credit</option>
                    </select>
                    <div class="invalid-feedback">Select entry type.</div>
                </td>
                <td>
                    <input name="Voucher.Entries[${rowCount}].Amount" type="number" step="0.01" min="0.01" class="form-control" required />
                    <div class="invalid-feedback">Enter amount greater than 0.</div>
                </td>
                <td class="text-center">
                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeEntry(this)" aria-label="Remove entry">&times;</button>
                </td>
            `;

            tbody.appendChild(newRow);
        }

        function updateEntryIndices() {
            const tbody = document.getElementById('entriesBody');
            Array.from(tbody.rows).forEach((row, index) => {
                row.querySelectorAll('select, input').forEach(input => {
                    const name = input.name;
                    const newName = name.replace(/\d+/, index);
                    input.name = newName;
                });
            });
        }
    </script>
}
